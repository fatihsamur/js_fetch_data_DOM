{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","phoneList","document","querySelector","getPhones","url","request","getPhoneDetails","phoneIds","forEach","phoneId","then","phoneDetail","li","createElement","innerText","name","appendChild","catch","error","Error","fetch","response","ok","headers","get","includes","json","Promise","reject","status","statusText","phones","map","phone","id","setTimeout"],"mappings":";AAAA,aAEA,IAAMA,EACJ,mEAEIC,EAAYC,SAASC,cAAc,eAUzC,SAASC,EAAUC,GACVC,OAAAA,EAAQD,GAGjB,SAASE,EAAgBC,GACvBA,EAASC,QAAQ,SAAAC,GACfJ,EAAWN,GAAAA,OAAAA,EAAYU,KAAAA,OAAAA,EAAvB,UACGC,KAAK,SAAAC,GACEC,IAAAA,EAAKX,SAASY,cAAc,MAElCD,EAAGE,UAAYH,EAAYI,KAC3Bf,EAAUgB,YAAYJ,KAEvBK,MAAM,SAACC,GAAU,OAAA,IAAIC,MAAMD,OAIlC,SAASb,EAAQD,GACRgB,OAAAA,MAAMhB,GACVM,KAAK,SAAAW,GACA,OAACA,EAASC,GAMTD,EAASE,QAAQC,IAAI,gBAAgBC,SAAS,oBAM5CJ,EAASK,OALPC,QAAQC,OACbT,MAAM,0CAPDQ,QAAQC,OACbT,MAAgBE,UAAAA,OAAAA,EAASQ,OAAYR,OAAAA,OAAAA,EAASS,gBA9BxD3B,EAAaJ,GAAAA,OAAAA,EAAb,UACGW,KAAK,SAAAqB,GAGJzB,EAFcyB,EAAOC,IAAI,SAAAC,GAASA,OAAAA,EAAMC,QAIzCjB,MAAM,SAAAC,GAASiB,OAAAA,WAAW,WAAM,OAAA,IAAIhB,MAAMD,IAAQ","file":"main.2af28071.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL\n= 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nconst phoneList = document.querySelector('.phone_list');\n\ngetPhones(`${BASE_URL}.json`)\n  .then(phones => {\n    const idArr = phones.map(phone => phone.id);\n\n    getPhoneDetails(idArr);\n  })\n  .catch(error => setTimeout(() => new Error(error), 5000));\n\nfunction getPhones(url) {\n  return request(url);\n}\n\nfunction getPhoneDetails(phoneIds) {\n  phoneIds.forEach(phoneId => {\n    request(`${BASE_URL}/${phoneId}.json`)\n      .then(phoneDetail => {\n        const li = document.createElement('li');\n\n        li.innerText = phoneDetail.name;\n        phoneList.appendChild(li);\n      })\n      .catch((error) => new Error(error));\n  });\n}\n\nfunction request(url) {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          Error(`Error: ${response.status} - ${response.statusText}`)\n        );\n      }\n\n      if (!response.headers.get('content-type').includes('application/json')) {\n        return Promise.reject(\n          Error('Error: Content type is not supported!')\n        );\n      }\n\n      return response.json();\n    });\n}\n"]}